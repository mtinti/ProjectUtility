# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/03_correlation_utilities.ipynb.

# %% auto 0
__all__ = ['concordance_correlation_coefficient']

# %% ../nbs/03_correlation_utilities.ipynb 5
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from typing import List, Dict, Optional, Union, Tuple
from dataclasses import dataclass


# %% ../nbs/03_correlation_utilities.ipynb 14
def concordance_correlation_coefficient(y_true, y_pred):
    """
    Calculate the concordance correlation coefficient (CCC).
    
    The concordance correlation coefficient measures the agreement between two variables,
    ranging from -1 to 1, where 1 represents perfect agreement.
    
    Parameters
    ----------
    y_true : array-like
        Ground truth values.
    y_pred : array-like
        Predicted values.
        
    Returns
    -------
    float
        Concordance correlation coefficient value between -1 and 1.
        A value of 1 indicates perfect agreement between the true and predicted values.
    
    References
    ----------
    Lawrence, I., and Kuei Lin. "A concordance correlation coefficient to evaluate 
    reproducibility." Biometrics (1989): 255-268.
    """
    # Convert inputs to numpy arrays
    y_true = np.asarray(y_true)
    y_pred = np.asarray(y_pred)
    
    # Calculate means
    mean_true = np.mean(y_true)
    mean_pred = np.mean(y_pred)
    
    # Calculate variances and standard deviations
    var_true = np.var(y_true)
    var_pred = np.var(y_pred)
    
    sd_true = np.std(y_true)
    sd_pred = np.std(y_pred)
    
    # Calculate Pearson correlation coefficient
    correlation = np.corrcoef(y_true, y_pred)[0, 1]
    
    # Calculate CCC
    numerator = 2 * correlation * sd_true * sd_pred
    denominator = var_true + var_pred + (mean_true - mean_pred)**2
    
    return numerator / denominator
